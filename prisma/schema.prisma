generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id       Int    @id @default(autoincrement()) @db.UnsignedInt
  email    String @db.VarChar(255)
  password String @db.VarChar(255)

  userInfos     UserInfos?
  refreshTokens RefreshTokens?
  posts         Posts[]
  likes         Likes[]
}

model Posts {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  user_Id   Int      @db.UnsignedInt
  title     String   @db.VarChar(255)
  category  Category
  content   String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  likeCount Int      @default(0)
  user      Users    @relation(fields: [user_Id], references: [id], onDelete: Cascade)
  likes     Likes[]
}

model RefreshTokens {
  id      Int    @id @default(autoincrement()) @db.UnsignedInt
  user_Id Int    @unique @db.UnsignedInt
  token   String @db.VarChar(255)

  user Users @relation(fields: [user_Id], references: [id], onDelete: Cascade)
}

model UserInfos {
  id           Int     @id @default(autoincrement()) @db.UnsignedInt
  user_Id      Int     @unique @db.UnsignedInt
  region       String  @db.VarChar(255)
  nickname     String  @db.VarChar(255)
  introduction String  @db.VarChar(255)
  profileImage String? @db.VarChar(255)

  user Users @relation(fields: [user_Id], references: [id], onDelete: Cascade)
}

model Likes {
  id      Int @id @default(autoincrement()) @db.UnsignedInt
  user_Id Int @db.UnsignedInt
  post_Id Int @db.UnsignedInt

  user Users @relation(fields: [user_Id], references: [id], onDelete: Cascade)
  post Posts @relation(fields: [post_Id], references: [id], onDelete: Cascade)

  @@unique([user_Id, post_Id])
}

enum Category {
  INFO
  LOST
  CLUB
}
