generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id            Int            @id @default(autoincrement()) @db.UnsignedInt
  email         String         @db.VarChar(255)
  password      String         @db.VarChar(255)
  Comments      Comments[]
  likes         Likes[]
  posts         Posts[]
  refreshTokens RefreshTokens?
  userInfos     UserInfos?
}

model Posts {
  id        Int        @id @default(autoincrement()) @db.UnsignedInt
  user_Id   Int        @db.UnsignedInt
  title     String     @db.VarChar(255)
  category  Category
  content   String     @db.VarChar(255)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  imageURL  String?
  Comments  Comments[]
  likes     Likes[]
  user      Users      @relation(fields: [user_Id], references: [id], onDelete: Cascade)

  @@index([user_Id], map: "Posts_user_Id_fkey")
}

model RefreshTokens {
  id      Int    @id @default(autoincrement()) @db.UnsignedInt
  user_Id Int    @unique @db.UnsignedInt
  token   String @db.VarChar(255)
  user    Users  @relation(fields: [user_Id], references: [id], onDelete: Cascade)
}

model UserInfos {
  id           Int        @id @default(autoincrement()) @db.UnsignedInt
  user_Id      Int        @unique @db.UnsignedInt
  region       String     @db.VarChar(255)
  nickname     String     @unique @db.VarChar(255)
  introduction String     @db.VarChar(255)
  profileImage String?    @db.VarChar(255)
  Comments     Comments[]
  user         Users      @relation(fields: [user_Id], references: [id], onDelete: Cascade)
}

model Likes {
  id      Int   @id @default(autoincrement()) @db.UnsignedInt
  user_Id Int   @db.UnsignedInt
  post_Id Int   @db.UnsignedInt
  post    Posts @relation(fields: [post_Id], references: [id], onDelete: Cascade)
  user    Users @relation(fields: [user_Id], references: [id], onDelete: Cascade)

  @@unique([user_Id, post_Id])
}

model Comments {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  content   String    @db.Text
  user_Id   Int       @db.UnsignedInt
  post_Id   Int       @db.UnsignedInt
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  nickname  String    @unique @db.VarChar(255)
  userInfo  UserInfos @relation(fields: [nickname], references: [nickname], onDelete: Cascade)
  post      Posts     @relation(fields: [post_Id], references: [id], onDelete: Cascade)
  user      Users     @relation(fields: [user_Id], references: [id], onDelete: Cascade)

  @@index([post_Id], map: "Comments_post_Id_fkey")
  @@index([user_Id], map: "Comments_user_Id_fkey")
}

enum Category {
  INFO
  LOST
  CLUB
}
